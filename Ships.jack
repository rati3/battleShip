class Ships {
    field Array ships; 

    constructor Ships new() {
        do initialize2DArray();
        return this;
    }

    method void dispose() {
        var Array array;

        var int index;
        let index = 0;
        while (index < 10) {
            let array = ships[index];
            do array.dispose();
            let index = index + 1;
        }

        do ships.dispose();
        return;
    }

    method void initialize2DArray() {
        var Array array;
        var int index;
        let ships = Array.new(10);
        let index = 0;
        while (index < 10) {
            let array = Array.new(10);
            let ships[index] = array;
            let index = index + 1;
            
        }
        return;
    }

    method void add(int x, int y, int startX, int startY, int boxLen) {
        var Array array;
        var int i, j;
        let i = (x - startX) / boxLen;
        let j = (y - startY) / boxLen;
        
        let array = ships[i];
        let array[j] = 1;
        
        return;
    }

    method boolean shipsAreValid() {
        
    }




    /** for debuging */
    method void toString() {
        var Array array;

        var int i, j;
        let i = 0;
        while (i < 10) {
            let array = ships[i];
            let j = 0;
            while (j < 10) {
                do Output.printInt(array[j]);
                let j = j + 1;
            }
            do Output.println();
            let i = i + 1;
        }
        do Output.println();
        return;
    }

}