class Gameplay{
    field Board playerBoard, computerBoard;
    constructor Gameplay new() {
        let playerBoard = Board.new(40, 40, 190, 190, 15);
        let computerBoard = Board.new(265, 40, 415, 190, 15);

        return this;
    }

    method void dispose() {
        do playerBoard.dispose();
        do computerBoard.dispose();

        return;
    }

    method boolean start() {
        var Array computerShips;
        var int n;
        var Ship ship;

        do playerBoard.drawBoard();
        do playerBoard.changeBox(true); // bold starting (0,0) box 

        do computerBoard.drawBoard();
        do playerBoard.putShips();


        /** TO RANDOM SHIPS OF COMPUTER UNCOMMENT THESE LINES */
        /** RANDOMING IS NOT OPTIMAL. IT NEEDS ABOUT 10-15 SECONDS */
        /** IN SOME CASES IT MAY OCCUR STACK OVERFLOW */

        // let n = 1;
        // let computerShips = playerBoard.generateShips(n);        

        // while (~(computerBoard.setGeneratedShip(computerShips))) {
        //     let n = n + 2;
        //     let computerShips = playerBoard.generateShips(n);
        //     do computerBoard.resetSelectedBoxes();
        // }

        
        /** FOR TESTING OTHER PARTS OF ASSIGNMENT COPY SHIPS OF PLAYER */
        do computerBoard.setBoardGrid(playerBoard.getBoardGrid());
       
        return startGame(); 
    }


    method boolean startGame() {
        var ComputerShoot compShoot;
        var int loop;
        let compShoot = ComputerShoot.new(playerBoard);

       
        while (true) {

            // player is shooting
            let loop = 1;
            while (~(loop = 0)) {
                do computerBoard.changeBox(true);
                let loop = computerBoard.shoot();
                if (computerBoard.noMoreShips()) {
                    return true;
                }
            }

            // computer is shooting
            let loop = 1;
            while (~(loop = 0)) {
                let loop = compShoot.shoot();
                if (compShoot.noMoreShips()) {
                    return false;
                }
                do Sys.wait(300);
            }
            
        }

        return false;
    }

}

