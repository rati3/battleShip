function Board.new 0
push constant 9
call Memory.alloc 1
pop pointer 0
push argument 4
pop this 6
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push this 0
pop this 4
push this 1
pop this 5
push constant 7
pop this 8
call Grid.new 0
pop this 7
push pointer 0
return
function Board.dispose 0
push argument 0
pop pointer 0
push this 7
call Grid.dispose 1
pop temp 0
push constant 0
return
function Board.drawBoard 0
push argument 0
pop pointer 0
push pointer 0
push this 0
push this 2
push this 1
push this 3
call Board.drawHorizontal 5
pop temp 0
push pointer 0
push this 0
push this 1
push this 3
push this 2
call Board.drawVertical 5
pop temp 0
push constant 0
return
function Board.drawHorizontal 0
push argument 0
pop pointer 0
label WHILE_EXP0
push argument 3
push argument 4
gt
not
not
if-goto WHILE_END0
push argument 1
push argument 3
push argument 2
push argument 3
call Screen.drawLine 4
pop temp 0
push argument 3
push this 6
add
pop argument 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.drawVertical 0
push argument 0
pop pointer 0
label WHILE_EXP0
push argument 1
push argument 4
gt
not
not
if-goto WHILE_END0
push argument 1
push argument 2
push argument 1
push argument 3
call Screen.drawLine 4
pop temp 0
push argument 1
push this 6
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.outOfBounds 2
push argument 0
pop pointer 0
push argument 1
push this 0
lt
push argument 1
push this 2
lt
not
or
pop local 0
push argument 2
push this 1
lt
push argument 2
push this 3
lt
not
or
pop local 1
push local 0
push local 1
or
return
function Board.changeBox 0
push argument 0
pop pointer 0
push argument 1
call Screen.setColor 1
pop temp 0
push this 4
push constant 1
add
push this 5
push constant 1
add
push this 4
push this 6
add
push constant 1
sub
push this 5
push constant 1
add
call Screen.drawLine 4
pop temp 0
push this 4
push constant 1
add
push this 5
push this 6
add
push constant 1
sub
push this 4
push this 6
add
push constant 1
sub
push this 5
push this 6
add
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push this 4
push constant 1
add
push this 5
push constant 1
add
push this 4
push constant 1
add
push this 5
push this 6
add
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push this 4
push this 6
add
push constant 1
sub
push this 5
push constant 1
add
push this 4
push this 6
add
push constant 1
sub
push this 5
push this 6
add
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.selectBox 0
push argument 0
pop pointer 0
push argument 3
call Screen.setColor 1
pop temp 0
push argument 1
push constant 1
add
push argument 2
push constant 1
add
push argument 1
push this 6
add
push constant 1
sub
push argument 2
push this 6
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Board.putShips 5
push argument 0
pop pointer 0
push constant 0
not
pop local 3
label WHILE_EXP0
push local 3
not
if-goto WHILE_END0
label WHILE_EXP1
push local 2
push constant 0
eq
not
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 2
goto WHILE_EXP1
label WHILE_END1
label WHILE_EXP2
push local 2
push constant 0
eq
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 2
goto WHILE_EXP2
label WHILE_END2
push local 2
push constant 83
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
call Grid.findShips 1
pop temp 0
push this 7
call Grid.shipsAreValid 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push constant 0
call Board.changeBox 2
pop temp 0
push constant 0
pop local 3
goto IF_END1
label IF_FALSE1
push pointer 0
call Board.resetGrid 1
pop temp 0
label IF_END1
label IF_FALSE0
push local 2
push constant 128
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 4
push this 0
sub
push this 6
call Math.divide 2
pop local 0
push this 5
push this 1
sub
push this 6
call Math.divide 2
pop local 1
push this 7
push local 0
push local 1
call Grid.isEmpty 3
pop local 4
push pointer 0
push this 4
push this 5
push local 4
call Board.selectBox 4
pop temp 0
push this 7
push local 0
push local 1
push local 4
call Grid.add 4
pop temp 0
label IF_FALSE2
push local 2
push constant 130
lt
not
push local 2
push constant 133
gt
not
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push local 2
call Board.arrowPressed 2
pop temp 0
label IF_FALSE3
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.arrowPressed 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call Board.changeBox 2
pop temp 0
push argument 1
push constant 130
eq
push pointer 0
push this 4
push this 6
sub
push this 5
call Board.outOfBounds 3
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
push this 6
sub
pop this 4
label IF_FALSE0
push argument 1
push constant 131
eq
push pointer 0
push this 4
push this 5
push this 6
sub
call Board.outOfBounds 3
not
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 5
push this 6
sub
pop this 5
label IF_FALSE1
push argument 1
push constant 132
eq
push pointer 0
push this 4
push this 6
add
push this 5
call Board.outOfBounds 3
not
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 4
push this 6
add
pop this 4
label IF_FALSE2
push argument 1
push constant 133
eq
push pointer 0
push this 4
push this 5
push this 6
add
call Board.outOfBounds 3
not
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 5
push this 6
add
pop this 5
label IF_FALSE3
push pointer 0
push constant 0
not
call Board.changeBox 2
pop temp 0
push constant 0
return
function Board.resetSelectedBoxes 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 10
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 10
lt
not
if-goto WHILE_END1
push this 7
push local 0
push local 1
call Grid.isEmpty 3
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push local 0
push constant 15
call Math.multiply 2
add
pop this 4
push this 1
push local 1
push constant 15
call Math.multiply 2
add
pop this 5
push pointer 0
push this 4
push this 5
push constant 0
call Board.selectBox 4
pop temp 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.selectBoxes 3
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 10
lt
not
if-goto WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push constant 10
lt
not
if-goto WHILE_END1
push this 7
push local 1
push local 2
call Grid.isEmpty 3
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push local 1
push constant 15
call Math.multiply 2
add
pop this 4
push this 1
push local 2
push constant 15
call Math.multiply 2
add
pop this 5
push pointer 0
push this 4
push this 5
push constant 0
not
call Board.selectBox 4
pop temp 0
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.resetGrid 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call Board.changeBox 2
pop temp 0
push pointer 0
call Board.resetSelectedBoxes 1
pop temp 0
push this 0
pop this 4
push this 1
pop this 5
push pointer 0
push constant 0
not
call Board.changeBox 2
pop temp 0
push this 7
call Grid.dispose 1
pop temp 0
call Grid.new 0
pop this 7
push constant 0
return
function Board.generateShips 0
push argument 0
pop pointer 0
push this 7
push argument 1
call Grid.getRandomShips 2
return
function Board.getBoardGrid 0
push argument 0
pop pointer 0
push this 7
call Grid.getGrid 1
return
function Board.setBoardGrid 0
push argument 0
pop pointer 0
push this 7
push argument 1
call Grid.setGrid 2
pop temp 0
push this 7
call Grid.findShips 1
pop temp 0
push constant 0
return
function Board.setGeneratedShip 0
push argument 0
pop pointer 0
push this 7
push argument 1
call Grid.setShips 2
pop temp 0
push this 7
call Grid.fillGrid 1
pop temp 0
push this 7
call Grid.findShips 1
pop temp 0
push this 7
call Grid.shipsAreValid 1
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
call Grid.resetShips 1
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
function Board.shoot 6
push argument 0
pop pointer 0
push constant 0
not
pop local 4
label WHILE_EXP0
push local 4
not
if-goto WHILE_END0
label WHILE_EXP1
push local 3
push constant 0
eq
not
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 3
goto WHILE_EXP1
label WHILE_END1
label WHILE_EXP2
push local 3
push constant 0
eq
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 3
goto WHILE_EXP2
label WHILE_END2
push local 3
push constant 128
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
push this 0
sub
push this 6
call Math.divide 2
pop local 0
push this 5
push this 1
sub
push this 6
call Math.divide 2
pop local 1
push pointer 0
push local 0
push local 1
call Board.shootAt 3
pop local 2
label WHILE_EXP3
push local 3
push constant 0
eq
not
not
if-goto WHILE_END3
call Keyboard.keyPressed 0
pop local 3
goto WHILE_EXP3
label WHILE_END3
push local 2
return
label IF_FALSE0
push local 3
push constant 130
lt
not
push local 3
push constant 133
gt
not
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 3
call Board.arrowPressed 2
pop temp 0
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.strike 2
push argument 0
pop pointer 0
push this 4
push constant 7
add
pop local 0
push this 5
push constant 3
add
pop local 1
push pointer 0
push this 4
push this 5
push constant 0
call Board.selectBox 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push local 0
push local 1
push constant 5
add
call Screen.drawLine 4
pop temp 0
push local 0
push local 1
push constant 8
add
push local 0
push local 1
push constant 9
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.noMoreShips 0
push argument 0
pop pointer 0
push this 8
push constant 0
eq
return
function Board.destroyShip 3
push argument 0
pop pointer 0
push argument 1
call Ship.getSize 1
pop local 0
push argument 1
call Ship.isVert 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Ship.getX 1
pop local 1
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push argument 1
call Ship.getY 1
push local 0
add
push constant 1
sub
pop local 2
push pointer 0
push local 1
push local 2
call Board.destroy 3
pop temp 0
push this 7
push local 1
push local 2
call Grid.destroy 3
pop temp 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
goto IF_END0
label IF_FALSE0
push argument 1
call Ship.getY 1
pop local 2
label WHILE_EXP1
push local 0
push constant 0
gt
not
if-goto WHILE_END1
push argument 1
call Ship.getX 1
push local 0
add
push constant 1
sub
pop local 1
push pointer 0
push local 1
push local 2
call Board.destroy 3
pop temp 0
push this 7
push local 1
push local 2
call Grid.destroy 3
pop temp 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP1
label WHILE_END1
label IF_END0
push constant 0
return
function Board.destroy 2
push argument 0
pop pointer 0
push this 0
push argument 1
push constant 15
call Math.multiply 2
add
pop local 0
push this 1
push argument 2
push constant 15
call Math.multiply 2
add
pop local 1
push pointer 0
push local 0
push local 1
push constant 0
call Board.selectBox 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push constant 1
add
push local 1
push constant 1
add
push local 0
push constant 14
add
push local 1
push constant 14
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
push local 1
push constant 14
add
push local 0
push constant 14
add
push local 1
push constant 1
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.miss 2
push argument 0
pop pointer 0
push this 0
push argument 1
push constant 15
call Math.multiply 2
add
pop local 0
push this 1
push argument 2
push constant 15
call Math.multiply 2
add
pop local 1
push pointer 0
push local 0
push local 1
push constant 0
call Board.selectBox 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push constant 3
add
push local 1
push constant 5
add
push local 0
push constant 12
add
push local 1
push constant 5
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 3
add
push local 1
push constant 10
add
push local 0
push constant 12
add
push local 1
push constant 10
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 5
add
push local 1
push constant 3
add
push local 0
push constant 5
add
push local 1
push constant 12
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 10
add
push local 1
push constant 3
add
push local 0
push constant 10
add
push local 1
push constant 12
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.shootAt 2
push argument 0
pop pointer 0
push this 0
push argument 1
push constant 15
call Math.multiply 2
add
pop this 4
push this 1
push argument 2
push constant 15
call Math.multiply 2
add
pop this 5
push this 7
push argument 1
push argument 2
call Grid.alreadyShot 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 4
return
label IF_FALSE0
push this 7
push argument 1
push argument 2
call Grid.isEmpty 3
not
pop local 0
push local 0
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 7
push argument 1
push argument 2
call Grid.findShipAt 3
pop local 1
push pointer 0
call Board.strike 1
pop temp 0
push this 7
push argument 1
push argument 2
call Grid.strike 3
pop temp 0
push local 1
call Ship.strike 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 8
push constant 1
sub
pop this 8
push pointer 0
push local 1
call Board.destroyShip 2
pop temp 0
push constant 2
return
label IF_FALSE2
push constant 1
return
goto IF_END1
label IF_FALSE1
push pointer 0
push argument 1
push argument 2
call Board.miss 3
pop temp 0
push this 7
push argument 1
push argument 2
call Grid.miss 3
pop temp 0
push constant 0
return
label IF_END1
